use project_nutrients;

CREATE TABLE AUTH_NAMES
(
  AUTH_NAME VARCHAR(500) NOT NULL COMMENT '접근권한명',
  UNIQUE_ID VARCHAR(200) NOT NULL COMMENT '접근권한 대표값',
  PRIMARY KEY (UNIQUE_ID)
) COMMENT '접근권한명';

CREATE TABLE AUTHS
(
  UNIQUE_ID_AUTH_NAMES VARCHAR(200) NOT NULL COMMENT '접근권한 대표값',
  UNIQUE_ID            VARCHAR(200) NOT NULL COMMENT '유니크ID',
  PRIMARY KEY (UNIQUE_ID_AUTH_NAMES, UNIQUE_ID)
) COMMENT '권한들';

CREATE TABLE COMMONS_CODE
(
  COMMON_CODE_ID        VARCHAR(500) NOT NULL COMMENT '공통 코드_ID',
  NAME                  VARCHAR(500) NOT NULL COMMENT '명칭',
  ORDER_NUMBER          VARCHAR(500) NULL     COMMENT '정렬순서',
  ATTRIBUTION_1         VARCHAR(500) NULL     COMMENT '속성_1',
  ATTRIBUTION_2         VARCHAR(500) NULL     COMMENT '속성_2',
  DESCRIPTION           VARCHAR(500) NULL     COMMENT '코드설명',
  SYSTEM_CODE_YN        VARCHAR(500) NOT NULL COMMENT '초기 시스템 코드 여부',
  USE_YN                VARCHAR(500) NOT NULL COMMENT '사용 여부',
  REGISTER_SEQ          VARCHAR(500) NOT NULL COMMENT '등록자SEQ',
  REGISTRY_DATE         VARCHAR(500) NOT NULL COMMENT '등록일자',
  MODIFIER_SEQ          VARCHAR(500) NOT NULL COMMENT '수정자_SEQ',
  MODIFY_DATE           VARCHAR(500) NOT NULL COMMENT '수정일자',
  PARENT_COMMON_CODE_ID VARCHAR(500) NULL     COMMENT '상위 공통 코드 ID',
  PRIMARY KEY (COMMON_CODE_ID)
) COMMENT '나중에 현업에서 이 테이블이 있으면 참고해라';

CREATE TABLE COMPONENT
(
  COMPONENT    VARCHAR(500) NOT NULL COMMENT '성분',
  COMPONENT_ID VARCHAR(500) NOT NULL COMMENT '성분_ID',
  PRIMARY KEY (COMPONENT_ID)
) COMMENT '성분';

CREATE TABLE EFFECT
(
  EFFECT    VARCHAR(500) NOT NULL COMMENT '영양제 효과',
  EFFECT_ID VARCHAR(500) NOT NULL COMMENT '효과_ID',
  PRIMARY KEY (EFFECT_ID)
) COMMENT '영양제 효과';

CREATE TABLE HISTORY
(
  DISEASE    VARCHAR(500) NOT NULL COMMENT '질병&알레르기이력',
  HISTORY_ID VARCHAR(500) NOT NULL COMMENT '과거이력_ID',
  PRIMARY KEY (HISTORY_ID)
) COMMENT '과거력';

CREATE TABLE INQUIRY
(
  INQUIRY_ID    VARCHAR(500) NOT NULL COMMENT '댓글_ID',
  WRITING_DATE  TIMESTAMP    NULL     COMMENT '작성일자',
  CONTENT       VARCHAR(500) NULL     COMMENT '내용',
  RESPONSE      VARCHAR(500) NULL     COMMENT '응답',
  RESPONSE_DATE TIMESTAMP    NULL     COMMENT '응답일자',
  ADMINE_ID     VARCHAR(500) NOT NULL COMMENT '관리자_ID',
  UNIQUE_ID     VARCHAR(200) NOT NULL COMMENT '유니크ID',
  PRIMARY KEY (INQUIRY_ID)
) COMMENT '문의';

CREATE TABLE MEMBERSANDADMIN
(
  UNIQUE_ID        VARCHAR(200) NOT NULL COMMENT '유니크ID',
  NAME             VARCHAR(500) NOT NULL COMMENT '이름',
  ID               VARCHAR(500) NOT NULL COMMENT '아이디',
  PASSWORD         VARCHAR(500) NOT NULL COMMENT '비밀번호',
  BIRTHDATE        VARCHAR(500) NOT NULL COMMENT '생년월일',
  AGE              VARCHAR(500) NOT NULL COMMENT '나이',
  SEX              VARCHAR(500) NOT NULL COMMENT '성별',
  ADDRESS          VARCHAR(500) NOT NULL COMMENT '주소',
  PHONE            VARCHAR(500) NOT NULL COMMENT '연락처',
  REGISTRATIONDATE VARCHAR(500) NOT NULL COMMENT '가입일',
  EMAIL            VARCHAR(500) NOT NULL COMMENT '이메일',
  ADMINE_ID        VARCHAR(500) NOT NULL COMMENT '관리자_ID',
  HISTORY_ID       VARCHAR(500) NOT NULL COMMENT '과거력_ID',
  PRIMARY KEY (UNIQUE_ID)
) COMMENT '정보';

CREATE TABLE REVIEW
(
  REVIEW_ID    VARCHAR(500) NOT NULL COMMENT '리뷰_ID',
  WRITING_DATE TIMESTAMP    NULL     COMMENT '작성일자',
  TITLE        VARCHAR(500) NULL     COMMENT '제목 ',
  CONTENT      VARCHAR(500) NULL     COMMENT '내용',
  VIEW_COUNT   VARCHAR(500) NULL     COMMENT '조회수',
  UNIQUE_ID    VARCHAR(200) NOT NULL COMMENT '유니크ID',
  IMAGES       VARCHAR(500) NULL     COMMENT '이미지 ',
  PRIMARY KEY (REVIEW_ID)
) COMMENT '리뷰';

CREATE TABLE SIDEEFFECTS
(
  SIDEEFFECT    VARCHAR(500) NOT NULL COMMENT '부작용',
  SIDEEFFECT_ID VARCHAR(500) NOT NULL COMMENT '부작용_ID',
  PRIMARY KEY (SIDEEFFECT_ID)
) COMMENT '부작용';

CREATE TABLE SUPP_COMP
(
  SUPP_ID      VARCHAR(500) NOT NULL COMMENT '영양제_ID',
  COMPONENT_ID VARCHAR(500) NOT NULL COMMENT '성분_ID'
) COMMENT '영양제별 성분리스트';

CREATE TABLE SUPP_LIST
(
  SUPP_ID     VARCHAR(500) NOT NULL COMMENT '영양제_ID',
  EFFECT_ID   VARCHAR(500) NOT NULL COMMENT '효과_ID',
  EFFECT_FLAG VARCHAR(500) NOT NULL COMMENT '효과 FLAG'
) COMMENT '영양제 효과 리스트';

CREATE TABLE SUPP_SIDE
(
  SUPP_ID       VARCHAR(500) NOT NULL COMMENT '영양제_ID',
  SIDEEFFECT_ID VARCHAR(500) NOT NULL COMMENT '부작용_ID'
) COMMENT '영양제별 부작용';

CREATE TABLE SUPP_SPEC
(
  SUPP_ID     VARCHAR(500) NOT NULL COMMENT '영양제_ID',
  PRODUCT     VARCHAR(500) NOT NULL COMMENT '이름',
  MANUFACTURE VARCHAR(500) NOT NULL COMMENT '제조사',
  DOSAGE      VARCHAR(500) NOT NULL COMMENT '용량',
  FREQUENCY   VARCHAR(500) NOT NULL COMMENT '복용 주기',
  LOCATION    VARCHAR(500) NOT NULL COMMENT '이미지 위치',
  LINK        VARCHAR(500) NOT NULL COMMENT '링크',
  PRIMARY KEY (SUPP_ID)
) COMMENT '영양제 정보';

ALTER TABLE AUTHS
  ADD CONSTRAINT FK_AUTH_NAMES_TO_AUTHS
    FOREIGN KEY (UNIQUE_ID_AUTH_NAMES)
    REFERENCES AUTH_NAMES (UNIQUE_ID);

ALTER TABLE AUTHS
  ADD CONSTRAINT FK_MEMBERSANDADMIN_TO_AUTHS
    FOREIGN KEY (UNIQUE_ID)
    REFERENCES MEMBERSANDADMIN (UNIQUE_ID);

ALTER TABLE COMMONS_CODE
  ADD CONSTRAINT FK_COMMONS_CODE_TO_COMMONS_CODE
    FOREIGN KEY (PARENT_COMMON_CODE_ID)
    REFERENCES COMMONS_CODE (COMMON_CODE_ID);

ALTER TABLE INQUIRY
  ADD CONSTRAINT FK_MEMBERSANDADMIN_TO_INQUIRY
    FOREIGN KEY (UNIQUE_ID)
    REFERENCES MEMBERSANDADMIN (UNIQUE_ID);

ALTER TABLE MEMBERSANDADMIN
  ADD CONSTRAINT FK_HISTORY_TO_MEMBERSANDADMIN
    FOREIGN KEY (HISTORY_ID)
    REFERENCES HISTORY (HISTORY_ID);

ALTER TABLE REVIEW
  ADD CONSTRAINT FK_MEMBERSANDADMIN_TO_REVIEW
    FOREIGN KEY (UNIQUE_ID)
    REFERENCES MEMBERSANDADMIN (UNIQUE_ID);

ALTER TABLE SUPP_COMP
  ADD CONSTRAINT FK_SUPP_SPEC_TO_SUPP_COMP
    FOREIGN KEY (SUPP_ID)
    REFERENCES SUPP_SPEC (SUPP_ID);

ALTER TABLE SUPP_COMP
  ADD CONSTRAINT FK_COMPONENT_TO_SUPP_COMP
    FOREIGN KEY (COMPONENT_ID)
    REFERENCES COMPONENT (COMPONENT_ID);

ALTER TABLE SUPP_LIST
  ADD CONSTRAINT FK_SUPP_SPEC_TO_SUPP_LIST
    FOREIGN KEY (SUPP_ID)
    REFERENCES SUPP_SPEC (SUPP_ID);

ALTER TABLE SUPP_LIST
  ADD CONSTRAINT FK_EFFECT_TO_SUPP_LIST
    FOREIGN KEY (EFFECT_ID)
    REFERENCES EFFECT (EFFECT_ID);

ALTER TABLE SUPP_SIDE
  ADD CONSTRAINT FK_SUPP_SPEC_TO_SUPP_SIDE
    FOREIGN KEY (SUPP_ID)
    REFERENCES SUPP_SPEC (SUPP_ID);

ALTER TABLE SUPP_SIDE
  ADD CONSTRAINT FK_SIDEEFFECTS_TO_SUPP_SIDE
    FOREIGN KEY (SIDEEFFECT_ID)
    REFERENCES SIDEEFFECTS (SIDEEFFECT_ID);
