
CREATE TABLE ALLERGIES
(
  ALLERGIES    VARCHAR(50) NOT NULL COMMENT '알레르기',
  ALLERGIES_ID VARCHAR(50) NOT NULL COMMENT '알레르기_ID',
  PRIMARY KEY (ALLERGIES_ID)
) COMMENT '알레르기이력';

CREATE TABLE HISTORYDISEASE
(
  HISTORYDISEASE    VARCHAR(50) NOT NULL COMMENT '질병이력',
  HISTORYDISEASE_ID VARCHAR(50) NOT NULL COMMENT '질병이력_ID',
  PRIMARY KEY (HISTORYDISEASE_ID)
) COMMENT '질병이력';

CREATE TABLE MEMBERSINFOR 
(
  MEMBER_ID         VARCHAR(50) NOT NULL COMMENT '회원번호ID',
  NAME              VARCHAR(50) NOT NULL COMMENT '이름',
  ID                VARCHAR(50) NOT NULL COMMENT '아이디',
  PASSWORD          VARCHAR(50) NOT NULL COMMENT '비밀번호',
  BIRTHDATE         VARCHAR(50) NOT NULL COMMENT '생년월일',
  AGE               VARCHAR(50) NOT NULL COMMENT '나이',
  SEX_ID            VARCHAR(50) NOT NULL COMMENT '성별_ID',
  ADDRESS           VARCHAR(50) NOT NULL COMMENT '주소',
  PHONE             VARCHAR(50) NOT NULL COMMENT '연락처',
  HISTORYDISEASE_ID VARCHAR(50) NOT NULL COMMENT '질병이력_ID',
  ALLERGIES_ID      VARCHAR(50) NOT NULL COMMENT '알레르기_ID',
  REGISTRATIONDATE  VARCHAR(50) NOT NULL COMMENT '가입일',
  EMAIL             VARCHAR(50) NOT NULL COMMENT '이메일',
  PAYMENT_ID        VARCHAR(50) NOT NULL COMMENT '결제정보_ID',
  PRIMARY KEY (MEMBER_ID)
) COMMENT '회원정보';

CREATE TABLE PAYMENT
(
  PAYMENT    VARCHAR(50) NOT NULL COMMENT '결제정보',
  PAYMENT_ID VARCHAR(50) NOT NULL COMMENT '결제정보_ID',
  PRIMARY KEY (PAYMENT_ID)
) COMMENT ' 결제정보';

CREATE TABLE SEX
(
  SEX    VARCHAR(50) NOT NULL COMMENT '성별',
  SEX_ID VARCHAR(50) NOT NULL COMMENT '성별_ID',
  PRIMARY KEY (SEX_ID)
) COMMENT '성별';

ALTER TABLE MEMBERSINFOR 
  ADD CONSTRAINT FK_SEX_TO_MEMBERSINFOR 
    FOREIGN KEY (SEX_ID)
    REFERENCES SEX (SEX_ID);

ALTER TABLE MEMBERSINFOR 
  ADD CONSTRAINT FK_HISTORYDISEASE_TO_MEMBERSINFOR 
    FOREIGN KEY (HISTORYDISEASE_ID)
    REFERENCES HISTORYDISEASE (HISTORYDISEASE_ID);

ALTER TABLE MEMBERSINFOR 
  ADD CONSTRAINT FK_ALLERGIES_TO_MEMBERSINFOR 
    FOREIGN KEY (ALLERGIES_ID)
    REFERENCES ALLERGIES (ALLERGIES_ID);

ALTER TABLE MEMBERSINFOR 
  ADD CONSTRAINT FK_PAYMENT_TO_MEMBERSINFOR 
    FOREIGN KEY (PAYMENT_ID)
    REFERENCES PAYMENT (PAYMENT_ID);
